buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}


apply plugin: 'com.android.library'

repositories {
    jcenter()
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        disable "NewApi"
    }

    packagingOptions {
        // needed for assertJ
        exclude 'asm-license.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'

        exclude 'LICENSE.txt'
    }
}


dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.squareup.assertj:assertj-android:1.0.0'

    androidTestCompile 'com.squareup.assertj:assertj-android:1.0.0'

    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'

    testCompile group: 'org.robolectric', name: 'robolectric', version: '2.4'
}

apply plugin: 'maven'

def groupId = 'org.ligi'
def artifactId = 'AXT'
def version = '0.32'
 
def localReleaseDest = "${buildDir}/release/${version}"
 
task androidJavadocs(type: Javadoc) {
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}
 
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
 
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
 
uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
        // Add other pom properties here if you want (developer details / licenses)
        repository(url: "file://${localReleaseDest}")
    }
}
 
task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}
 
task generateRelease << {
    println "Release ${version} can be found at ${localReleaseDest}/"
    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}
 
generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)
 
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}